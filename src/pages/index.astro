---
import { getSession } from "auth-astro/server";
let session = await getSession(Astro.request);
if (!session) return Astro.redirect("/login");

import type { Session } from "@auth/core/types";
import { Auth, SignIn, SignOut } from "auth-astro/components";

import Layout from "../layouts/Layout.astro";
import CreateTable from "./tables/create.astro";

let tables;
try {
  const response = await fetch("http://localhost:8001/items");
  tables = await response.json();
} catch (error) {
  console.error(error);
  tables = [
    { id: 1, name: "Table 1", activeTime: null, activeUser: null },
    { id: 2, name: "Table 2", activeTime: null, activeUser: null },
    { id: 3, name: "Table 3", activeTime: null, activeUser: null },
    { id: 4, name: "Table 4", activeTime: null, activeUser: null },
    { id: 5, name: "Table 5", activeTime: null, activeUser: null },
    { id: 6, name: "Table 6", activeTime: null, activeUser: null },
    { id: 7, name: "Table 7", activeTime: null, activeUser: null },
    { id: 8, name: "Table 8", activeTime: null, activeUser: null },
    { id: 9, name: "Table 9", activeTime: null, activeUser: null },
    { id: 10, name: "Table 10", activeTime: null, activeUser: null },
    { id: 11, name: "Table 11", activeTime: null, activeUser: null },
    { id: 12, name: "Table 12", activeTime: null, activeUser: null },
    { id: 13, name: "Table 13", activeTime: null, activeUser: null },
    { id: 14, name: "Table 14", activeTime: null, activeUser: null },
    { id: 15, name: "Table 15", activeTime: null, activeUser: null },
    { id: 16, name: "Table 16", activeTime: null, activeUser: null },
    { id: 17, name: "Table 17", activeTime: null, activeUser: null },
    { id: 18, name: "Table 18", activeTime: null, activeUser: null },
  ];
}
---

<Layout title="Table Session">
  <div class="grid place-items-center h-screen max-w-screen-xl mx-auto">
    <!-- <div>{JSON.stringify(data)}</div> -->
    {tables.length === 0 && <CreateTable />}
    <div class="grid grid-cols-3 items-center w-full">
      {
        tables.map((table) => {
          const activeTime = table.activeTime
            ? new Date(table.activeTime)
            : null;
          return (
            <a
              class="border flex flex-col items-center justify-center m-1 rounded-md h-32"
              href={`/tables/${table.id}`}
            >
              <span class="text-2xl">{table.name}</span>
              <span class="text-2xl">{table.activeUser}</span>
              <span class="text-2xl">{activeTime?.toLocaleString()}</span>
            </a>
          );
        })
      }
    </div>
  </div>
</Layout>
